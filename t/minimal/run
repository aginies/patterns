#!/usr/bin/perl

use strict;
use satsolver;

my $arch = 'x86_64';
my @packs = qw(
	pattern:minimal_base@new
	pattern:minimal_base-conflicts@new
	);

# added by yast
push @packs, qw(
	grub
	yast2-installation
	kernel-default
	);

my $pool = new satsolver::Pool;

$pool -> set_arch ($arch);
my $repo = $pool->create_repo('factory');
$repo->add_solv ('factory.solv');

my $repo_new = $pool->create_repo('new');
$repo_new->add_solv ('new.solv');

# Create Solver
my $solver = $pool->create_solver();

# Create dependencies to provides table
$pool->prepare();

# Create Request
my $job = $pool->create_request();

for my $p (@packs) {
	my ($n, $r) = split(/@/, $p, 2);
	$r = $pool->find_repo($r) if $r;
	my $pat = $pool->find($n, $r) || die "Failed to push job: $p";
	$job->install($pat);
}

# Solve the jobs
$solver->solve($job);

# Problems
my $pc = $solver->problems_count();
if ($pc) {
    print "Found $pc problems\n";
	my @problems = $solver->problems ($job);
	for my $p (@problems) {
	        my $ps = $p->string();
		print "Problem $ps\n";
	        my @solutions = $p->solutions();
	        for my $s (@solutions) {
		    my $ss = $s->string();
		    print "  Solution $ss\n";
		}
	}
	exit(1);
}

#my $t = $solver->transaction();
#if ($t) {
#    my $ts = $solver->transaction_string();
#    print "Transaction $ts\n";
#}
#else {
#    print "***** No transaction computed\n";
#}

sub sortbysize
{
	my $sa = $a->attr_values("solvable:installsize") || 0;
	my $sb = $b->attr_values("solvable:installsize") || 0;
	$sa <=> $sb;
}

# Print packages to install
my @a = $solver->installs(1);
for my $solvable (sort sortbysize @a) {
        my $name = $solvable->attr_values("solvable:name");
        my $arch = $solvable->attr_values("solvable:arch");
	my $size = $solvable->attr_values("solvable:installsize") || 0;
	my $ver  = $solvable->attr_values("solvable:evr");
        my $solv = $solvable->string();
	printf "%8d %s\n", $size, $name;
}


sub getInstallSizeKBytes {
	my $repo   = shift;
	my $solver = shift;
	my $sum    = 0;
	my @a = $solver->installs(1);
	for my $solvable (@a) {
		my $size = $solvable->attr_values("solvable:installsize");
		$sum += $size;
	}
	return $sum;
}

# get install size
my $size = getInstallSizeKBytes($repo,$solver);
printf "%8d %s\n", $size, "TOTAL";

# my $transaction = $solver->transaction();
# my $sizechange = $transaction->sizechange();
# print "SIZE CHANGE: $sizechange kB\n";
